@inherits LayoutComponentBase
@using Microsoft.JSInterop
@inject IJSRuntime JS
@inject NavigationManager Navigation

<div class="page flex h-screen">
  <!-- Sidebar -->
  <aside class="sidebar">
    <NavMenu />
  </aside>

  <!-- Contenido principal -->
  <main class="flex-1 flex flex-col">
    <!-- Header -->
    <header class="top-row px-4 py-2 bg-white shadow-sm">
      @if (string.IsNullOrEmpty(userEmail))
      {
        <a href="login" class="text-blue-600 hover:text-blue-800 font-medium text-sm">
          Iniciar sesión
        </a>
      }
      else
      {
        <div class="user-dropdown-container">
          <button @onclick="ToggleMenu" class="user-menu-button">
            <span class="user-email">@userEmail</span>
            <svg class="user-menu-icon" xmlns="http://www.w3.org/2000/svg" fill="none"
                 viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M19 9l-7 7-7-7" />
            </svg>
          </button>

          @if (menuOpen)
          {
            <div class="user-menu-dropdown">
              <button @onclick="Logout">Cerrar sesión</button>
            </div>
          }
        </div>
      }
    </header>

    <!-- Contenido dinámico -->
    <article class="flex-1 overflow-auto px-4">
      @Body
    </article>
  </main>
</div>

@code {
  private string? userEmail;
  private bool menuOpen;

  protected override async Task OnInitializedAsync()
  {
    await LoadSessionAsync();
    Navigation.LocationChanged += OnLocationChanged;
  }

  private async void OnLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
  {
    await LoadSessionAsync();
    await InvokeAsync(StateHasChanged);
  }

  private async Task LoadSessionAsync()
  {
    userEmail = await JS.InvokeAsync<string>("sessionStorage.getItem", "usuarioEmail");
  }

  private void ToggleMenu() => menuOpen = !menuOpen;

  private async Task Logout()
  {
    await JS.InvokeVoidAsync("sessionStorage.removeItem", "usuarioEmail");
    Navigation.NavigateTo("logout", forceLoad: true);
  }

  public void Dispose()
  {
    Navigation.LocationChanged -= OnLocationChanged;
  }
}
