@page "/eliminar-registro"
@inject FrontBlazor.Services.ServicioEntidad servicioEntidad

<h1>Eliminar Registro</h1>

<!-- Desplegable para seleccionar la tabla -->
<div class="mb-3">
    <label for="tablaSeleccion" class="form-label">Selecciona una tabla:</label>
    <select id="tablaSeleccion" class="form-select" @onchange="OnTablaChanged">
        <option value="">-- Selecciona --</option>
        @foreach (var tabla in tablasDisponibles)
        {
            <option value="@tabla">@tabla</option>
        }
    </select>
</div>

@if (!string.IsNullOrWhiteSpace(tablaSeleccionada))
{
    <!-- Campo para ingresar el id del registro a eliminar -->
    <div class="mb-3">
        <label for="registroId" class="form-label">Ingrese el ID del registro a eliminar:</label>
        <InputText id="registroId" class="form-control" @bind-Value="registroId" />
    </div>

    <!-- Bot贸n para eliminar -->
    <button class="btn btn-danger" @onclick="OnEliminar">Eliminar</button>
}

@if (!string.IsNullOrWhiteSpace(mensaje))
{
    <div class="alert alert-info mt-3">@mensaje</div>
}

@code {
    // Lista de tablas disponibles para eliminaci贸n
    private List<string> tablasDisponibles = new List<string>
    {
        "actor", "indicador", "resultadoindicador", "variable", "fuentesporindicador",
        "represenvisualporindicador", "responsablesporindicador", "rol_usuario", "variablesporindicador"
    };

    // Tabla seleccionada en el desplegable
    private string? tablaSeleccionada;

    // Valor ingresado para el id del registro a eliminar
    private string registroId = string.Empty;

    // Mensaje de retroalimentaci贸n
    private string? mensaje;

    private void OnTablaChanged(ChangeEventArgs e)
    {
        tablaSeleccionada = e.Value?.ToString();
        mensaje = null;
        registroId = string.Empty;
    }

    private async Task OnEliminar()
    {
        if (string.IsNullOrWhiteSpace(tablaSeleccionada))
        {
            mensaje = "Por favor, seleccione una tabla.";
            return;
        }
        if (string.IsNullOrWhiteSpace(registroId))
        {
            mensaje = "Por favor, ingrese el ID del registro a eliminar.";
            return;
        }

        // Se asume que la clave primaria se llama "id"
        bool resultado = await servicioEntidad.EliminarAsync("NombreProyecto", tablaSeleccionada, "id", registroId);
        if (resultado)
        {
            mensaje = $"Registro con ID {registroId} eliminado de la tabla {tablaSeleccionada} exitosamente.";
        }
        else
        {
            mensaje = "Ocurri贸 un error al eliminar el registro.";
        }
    }
}
